// Generated by view binder compiler. Do not edit!
package com.example.pro001.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pro001.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ForgetPass;

  @NonNull
  public final TextView NewRegister;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final EditText email;

  @NonNull
  public final TextView login;

  @NonNull
  public final EditText password;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull TextView ForgetPass,
      @NonNull TextView NewRegister, @NonNull Button btnLogin, @NonNull EditText email,
      @NonNull TextView login, @NonNull EditText password) {
    this.rootView = rootView;
    this.ForgetPass = ForgetPass;
    this.NewRegister = NewRegister;
    this.btnLogin = btnLogin;
    this.email = email;
    this.login = login;
    this.password = password;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ForgetPass;
      TextView ForgetPass = ViewBindings.findChildViewById(rootView, id);
      if (ForgetPass == null) {
        break missingId;
      }

      id = R.id.NewRegister;
      TextView NewRegister = ViewBindings.findChildViewById(rootView, id);
      if (NewRegister == null) {
        break missingId;
      }

      id = R.id.btn_login;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.login;
      TextView login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, ForgetPass, NewRegister, btnLogin,
          email, login, password);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
